name: changes

on:
  workflow_call:
    outputs:
      api:
        value: ${{ jobs.detect-changes.outputs.api }}
      ui:
        value: ${{ jobs.detect-changes.outputs.ui }}
      node:
        value: ${{ jobs.detect-changes.outputs.node }}
      host:
        value: ${{ jobs.detect-changes.outputs.host }}
      pipeline:
        value: ${{ jobs.detect-changes.outputs.pipeline }}
      blobtools:
        value: ${{ jobs.detect-changes.outputs.blobtools }}
      docker:
        value: ${{ jobs.detect-changes.outputs.docker }}
      all:
        value: ${{ jobs.detect-changes.outputs.all }}
      outputs:
        value: ${{ jobs.detect-changes.outputs.output1 }}
      firstword:
        description: "The first output string"
        value: ${{ jobs.example_job.outputs.output1 }}
      secondword:
        description: "The second output string"
        value: ${{ jobs.example_job.outputs.output2 }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.filter.outputs.workflows }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api:
              - 'src/api/**'
            ui:
              - 'src/viewer/**'
              - 'src/packaged-viewer/**'
            node:
              - 'src/api/**'
              - 'src/viewer/**'
              - 'src/packaged-viewer/**'
            host:
              - 'src/blobtoolkit-host/**'
            pipeline:
              - 'src/blobtoolkit-pipeline/**'
            blobtools:
              - 'src/blobtoolkit-host/**'
              - 'src/blobtoolkit-pipeline/**'
              - 'src/blobtools/**'
              - 'src/btk/**'
            docker:
              - 'src/docker/**'
            blobtoolkit:
              - 'src/**'
  example_job:
    name: Generate output
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      output1: ${{ steps.step1.outputs.firstword }}
      output2: ${{ steps.step2.outputs.secondword }}
    steps:
      - id: step1
        run: echo "::set-output name=firstword::hello"
      - id: step2
        run: echo "::set-output name=secondword::world"
