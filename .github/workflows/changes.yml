name: detect-changes

env:
  DEFAULT_PYTHON: '["3.9"]'
  MATRIX_PYTHON: '["3.8","3.9","3.10","3.11"]'

on:
  workflow_call:
    outputs:
      api:
        value: ${{ jobs.detect-changes.outputs.api }}
      ui:
        value: ${{ jobs.detect-changes.outputs.ui }}
      node:
        value: ${{ jobs.detect-changes.outputs.node }}
      host:
        value: ${{ jobs.detect-changes.outputs.host }}
      pipeline:
        value: ${{ jobs.detect-changes.outputs.pipeline }}
      blobtools:
        value: ${{ jobs.detect-changes.outputs.blobtools }}
      docker:
        value: ${{ jobs.detect-changes.outputs.docker }}
      all:
        value: ${{ jobs.detect-changes.outputs.all }}
      is-api-release:
        value: ${{ jobs.is-release.outputs.host }}
      is-ui-release:
        value: ${{ jobs.is-release.outputs.host }}
      is-node-release:
        value: ${{ jobs.is-release.outputs.host }}
      is-host-release:
        value: ${{ jobs.is-release.outputs.host }}
      is-pipeline-release:
        value: ${{ jobs.is-release.outputs.host }}
      is-blobtools-release:
        value: ${{ jobs.is-release.outputs.host }}
      requires-node:
        value: ${{ jobs.release-dependent.outputs.node }}
      host-matrix:
        value: ${{ jobs.release-dependent.outputs.host-matrix }}
      pipeline-matrix:
        value: ${{ jobs.release-dependent.outputs.pipeline-matrix }}
      blobtools-matrix:
        value: ${{ jobs.release-dependent.outputs.blobtools-matrix }}

jobs:
  detect-changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      ui: ${{ steps.filter.outputs.ui }}
      node: ${{ steps.filter.outputs.node }}
      host: ${{ steps.filter.outputs.host }}
      pipeline: ${{ steps.filter.outputs.pipeline }}
      blobtools: ${{ steps.filter.outputs.blobtools }}
      docker: ${{ steps.filter.outputs.docker }}
      all: ${{ steps.filter.outputs.all }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          # base: develop
          filters: |
            api:
              - 'src/api/**'
            ui:
              - 'src/viewer/**'
              - 'src/packaged-viewer/**'
            node:
              - 'src/api/**'
              - 'src/viewer/**'
              - 'src/packaged-viewer/**'
            host:
              - 'src/blobtoolkit-host/**'
            pipeline:
              - 'src/blobtoolkit-pipeline/**'
            blobtools:
              - 'src/blobtoolkit-host/**'
              - 'src/blobtoolkit-pipeline/**'
              - 'src/blobtools/**'
              - 'src/btk/**'
            docker:
              - 'src/docker/**'
            blobtoolkit:
              - 'src/**'

  is-release:
    needs: detect-changes
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.release.outputs.api || 'false' }}
      ui: ${{ steps.release.outputs.ui || 'false' }}
      node: ${{ steps.release.outputs.node || 'false' }}
      host: ${{ steps.release.outputs.host || 'false' }}
      pipeline: ${{ steps.release.outputs.pipeline || 'false' }}
      blobtools: ${{ steps.release.outputs.blobtools || 'false' }}
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - id: release
        run: |
          if [ ${{ needs.detect-changes.outputs.api == 'true' }} ];
            echo "api='true'" >> $GITHUB_OUTPUT
          fi
          if [ ${{ needs.detect-changes.outputs.ui == 'true' }} ];
            echo "ui='true'" >> $GITHUB_OUTPUT
          fi
          if [ ${{ needs.detect-changes.outputs.node == 'true' }} ];
            echo "node='true'" >> $GITHUB_OUTPUT
          fi
          if [ ${{ needs.detect-changes.outputs.host == 'true' }} ];
            echo "host='true'" >> $GITHUB_OUTPUT
          fi
          if [ ${{ needs.detect-changes.outputs.pipeline == 'true' }} ];
            echo "pipeline='true'" >> $GITHUB_OUTPUT
          fi
          if [ ${{ needs.detect-changes.outputs.blobtools == 'true' }} ];
            echo "blobtools='true'" >> $GITHUB_OUTPUT
          fi

  release-dependent:
    needs:
      - detect-changes
      - is-release
    if: always()
    runs-on: ubuntu-latest
    outputs:
      node: ${{ steps.needs-node.outputs.node || 'false' }}
      host-matrix: ${{ steps.host-matrix.outputs.matrix }}
      pipeline-matrix: ${{ steps.pipeline-matrix.outputs.matrix }}
      blobtools-matrix: ${{ steps.blobtools-matrix.outputs.matrix }}
    steps:
      - id: needs-node
        run: |
          if [[ "${{ needs.detect-changes.outputs.node == 'true' }}" == "true" || "${{ needs.is-release.outputs.host == 'true' }}" == "true" ]]; then
            echo "node='true'" >> $GITHUB_OUTPUT
          fi
      - id: host-matrix
        run: |
          if [ ${{ needs.is-release.outputs.host == 'true' }} ]; then
            echo "matrix=${MATRIX_PYTHON}" >> $GITHUB_OUTPUT
          else
            echo "matrix=${DEFAULT_PYTHON}" >> $GITHUB_OUTPUT
          fi
      - id: pipeline-matrix
        run: |
          if [ ${{ needs.is-release.outputs.pipeline == 'true' }} ]; then
            echo "matrix=${MATRIX_PYTHON}" >> $GITHUB_OUTPUT
          else
            echo "matrix=${DEFAULT_PYTHON}" >> $GITHUB_OUTPUT
          fi
      - id: blobtools-matrix
        run: |
          if [ ${{ needs.is-release.outputs.blobtools == 'true' }} ]; then
            echo "matrix=${MATRIX_PYTHON}" >> $GITHUB_OUTPUT
          else
            echo "matrix=${DEFAULT_PYTHON}" >> $GITHUB_OUTPUT
          fi
